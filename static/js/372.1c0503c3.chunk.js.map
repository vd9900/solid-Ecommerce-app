{"version":3,"file":"static/js/372.1c0503c3.chunk.js","mappings":"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","sources":["services/userApi.js","pages/Profile.jsx"],"sourcesContent":["import { emptySplitApi } from \"../api/emptySplitApi\";\r\n\r\nexport const userApi = emptySplitApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    userInfo: builder.query({\r\n      query: (email) => `api/vi/me/?email=${email}`,\r\n      providesTags: [\"USER\"],\r\n    }),\r\n    updateUserInfo: builder.mutation({\r\n      query: (info) => ({\r\n        url: \"api/vi/me/update\",\r\n        method: \"PUT\",\r\n        body: info,\r\n      }),\r\n      invalidatesTags: [\"USER\"],\r\n    }),\r\n    uploadProfile: builder.mutation({\r\n      query: (detail) => ({\r\n        url: \"api/vi/upload/profile\",\r\n        method: \"PUT\",\r\n        body: detail,\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useUserInfoQuery,\r\n  useUpdateUserInfoMutation,\r\n  useUploadProfileMutation,\r\n} = userApi;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import moment from \"m\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Loader from \"../components/Loder\";\r\nimport loadprofile from \"../assets/imgs/loadprofile.gif\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport {\r\n  useUpdateUserInfoMutation,\r\n  useUserInfoQuery,\r\n} from \"../services/userApi\";\r\nimport { useAuthUser } from \"react-auth-kit\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { useUploadProfileMutation } from \"../services/userApi\";\r\nimport { BsPlusCircleFill } from \"react-icons/bs\";\r\nimport { addUserImage } from \"../services/products/productSlice\";\r\nimport MyModal from \"../components/modals/MyModal\";\r\n\r\n// user input schmea\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email address\")\r\n    .required(\"Add new  email\"),\r\n  username: yup.string().required(\"Enter new username\"),\r\n});\r\nconst Profile = () => {\r\n  // Importing required hooks\r\n  const [toggleEdit, setToggleEdit] = useState(false);\r\n  const auth = useAuthUser();\r\n  const dispatch = useDispatch();\r\n\r\n  // fetch user details\r\n  const {\r\n    isLoading,\r\n    data,\r\n    isSuccess,\r\n    refetch,\r\n    isFetching,\r\n    isError,\r\n    error: userInfoDetailError,\r\n  } = useUserInfoQuery(auth().email, {\r\n    refetchOnMountOrArgChange: true,\r\n  });\r\n\r\n  // error handling with  errorboundary\r\n  if (isError) {\r\n    console.log(error);\r\n  }\r\n  console.log(userInfoDetailError);\r\n  //update user info\r\n  const [\r\n    updateUserInfo,\r\n    {\r\n      data: updatedData,\r\n      error,\r\n      isLoading: updateUserProfileLoading,\r\n      isSuccess: updateUserProfileSuccess,\r\n    },\r\n  ] = useUpdateUserInfoMutation();\r\n\r\n  // update user profile image\r\n  const [\r\n    uploadProfile,\r\n    {\r\n      data: uploadProfileResult,\r\n      isSuccess: uploadProfileSuccess,\r\n      isLoading: isuploadProfileFetching,\r\n    },\r\n  ] = useUploadProfileMutation();\r\n\r\n  const userData = data?.message;\r\n  console.log(\"fetching\", isuploadProfileFetching);\r\n  // input validation\r\n  const formik = useFormik({\r\n    initialValues: { email: \"\", username: \"\" },\r\n    validateOnBlur: true,\r\n    onSubmit: (values, action) => {\r\n      updateUserInfo({ username: values.username, email: values.email });\r\n      action.resetForm();\r\n    },\r\n    validationSchema: validationSchema,\r\n  });\r\n\r\n  // cancel btn\r\n  const addAgainEditValue = () => {\r\n    setToggleEdit(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  // img convert to base 64 and upload to cloudnary\r\n  const handleUserProfileImg = (e) => {\r\n    // converting to base64\r\n    const read = new FileReader();\r\n    read.readAsDataURL(e.target.files[0]);\r\n    read.onloadend = () => {\r\n      // on Success\r\n      uploadProfile({ image: read.result });\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateUserProfileSuccess && setToggleEdit(false);\r\n  }, [updateUserProfileSuccess]);\r\n\r\n  // refecth the userprofile again\r\n  useEffect(() => {\r\n    uploadProfileSuccess &&\r\n      refetch() &&\r\n      dispatch(addUserImage(userData?.avatar));\r\n  }, [uploadProfileSuccess, isSuccess]);\r\n\r\n  useEffect(() => {\r\n    isSuccess && dispatch(addUserImage(userData?.avatar));\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\" max-w-screen h-screen bg-gray-50\">\r\n      <Navbar />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"relative pt-16 sm:w-11/12 md:w-10/12 lg:w-9/12 sm:h-5/6 mx-auto flex justify-center sm:items-center\">\r\n          <div className=\" sm:relative w-full md:10/12 lg:w-11/12 xl:w-10/12   sm:h-5/6 flex max-sm:flex-col shadow-md bg-white/80 py-4 rounded-md\">\r\n            {/* edit toggel component */}\r\n            <MyModal\r\n              isOpen={toggleEdit}\r\n              onClose={() => setToggleEdit(!toggleEdit)}\r\n              className={\"z-40\"}\r\n            >\r\n              <form\r\n                autoComplete=\"\"\r\n                onSubmit={formik.handleSubmit}\r\n                className={` z-40 shadow-md flex flex-col duration-300  justify-between bg-gray-50 rounded-md py-2 gap-5  w-9/12  h-auto   absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2`}\r\n              >\r\n                <div>\r\n                  <div className=\"border-b py-2\">\r\n                    <p className=\"px-3 font-serif  text-xl\">Edit profile</p>\r\n                  </div>\r\n                  <div className=\"overflow-hidden px-4 flex flex-col gap-3\">\r\n                    <div className=\"p-2\">\r\n                      <p className=\"text-lg py-1\">Username</p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"border bg-gray-100 outline-none py-1 w-full sm:w-6/12 px-3 rounded-sm \"\r\n                        name=\"username\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                      />\r\n                      <p className=\"text-red-600 text-sm\">\r\n                        {formik.touched.username && formik.errors.username\r\n                          ? formik.errors.username\r\n                          : \"\"}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                      <p className=\"text-lg py-1\">Email</p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"border bg-gray-100 outline-none py-1 w-full sm:w-6/12 px-3 rounded-sm \"\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                      />\r\n                      <p className=\"text-red-600 text-sm\">\r\n                        {formik.touched.email && formik.errors.email\r\n                          ? formik.errors.email\r\n                          : \"\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center justify-end gap-3 px-3\">\r\n                  <button\r\n                    // onClick={handleDetailsEdit}\r\n                    className=\" disabled:bg-black/90 h-8 bg-black text-white flex gap-2 items-center px-6 rounded-md py-1 \"\r\n                    disabled={updateUserProfileLoading}\r\n                    type=\"submit\"\r\n                  >\r\n                    <CircularProgress\r\n                      size={18}\r\n                      className={``}\r\n                      style={{\r\n                        color: \"white\",\r\n                        display: `${\r\n                          updateUserProfileLoading ? \"inline-block\" : \"none\"\r\n                        }`,\r\n                      }}\r\n                    />\r\n                    {updateUserProfileLoading ? null : <span>Edit</span>}\r\n                  </button>\r\n                  <button\r\n                    onClick={addAgainEditValue}\r\n                    className=\"border border-black  px-8 rounded-md py-1 \"\r\n                    type=\"button\"\r\n                  >\r\n                    cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </MyModal>\r\n            <div className=\"sm:w-4/12 px-6 flex flex-col  items-center justify-evenly\">\r\n              <div className=\"flex flex-col gap-5 w-full\">\r\n                {isFetching || isuploadProfileFetching ? (\r\n                  <div className=\"overflow-hidden mx-auto  w-52 h-52 sm:w-40 sm:h-40 md:w-48 md:h-48 xl:h-64 xl:w-64 rounded-full animate-pulse bg-gray-100 flex items-center justify-center\">\r\n                    <img src={loadprofile} alt=\"\" className=\"w-10\" />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"overflow-hidden mx-auto relative w-52 h-52 sm:w-40 sm:h-40 md:w-48 md:h-48 xl:h-64 xl:w-64 rounded-full\">\r\n                    <img\r\n                      src={userData?.avatar?.url}\r\n                      className=\"mx-auto l object-cover\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"text-white absolute bottom-0 flex justify-end  bg-black/90   w-64 h-8\">\r\n                      <label\r\n                        htmlFor=\"file-upload\"\r\n                        className=\"custom-file-upload relative cursor-pointer\"\r\n                      >\r\n                        <span className=\"  \">\r\n                          <BsPlusCircleFill\r\n                            // onClick={}\r\n                            fontSize={18}\r\n                            className=\" text-white mt-1 mr-28\"\r\n                          />\r\n                        </span>\r\n                        <input\r\n                          id=\"file-upload\"\r\n                          name=\"file-upload\"\r\n                          type=\"file\"\r\n                          onChange={handleUserProfileImg}\r\n                          className=\"absolute w-full h-full opacity-0 overflow-hidden cursor-pointer\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <p className=\"text-3xl py-2 mr-auto\">\r\n                  {\" \"}\r\n                  {data?.message?.username}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => setToggleEdit(true)}\r\n                className=\"py-1 max-sm:w-5/12 max-sm:ml-auto hover:text-white hover:bg-black duration-700 rounded-md font-medium w-full border border-black \"\r\n              >\r\n                Edit profile\r\n              </button>\r\n            </div>\r\n            <div className=\"sm:w-8/12 md:pl-5 flex flex-col   \">\r\n              <div className=\"flex gap-4 py-2   px-10 border-b-2 border-r-gray-500\">\r\n                <span className=\"hidden sm:block cursor-pointer px-2 p font-medium border-b-4 border-gray-600 text-black/70 text-sm \">\r\n                  About\r\n                </span>\r\n                {/* <span className=\"cursor-pointer font-medium px-2 pb-1 text-black/70 text-sm rounded-md\">\r\n                Order Details\r\n              </span> */}\r\n              </div>\r\n              <div className=\"flex sm:h-5/6 p-4  flex-col justify-around gap-2 \">\r\n                <div className=\"border rounded-md p-4 flex flex-col gap-2 \">\r\n                  <p className=\"text-gray-500 border-b-2 font-medium w-fit\">\r\n                    Personal Details\r\n                  </p>\r\n                  <span className=\"\">\r\n                    <p className=\"text-sm  text-gray-700\">username</p>\r\n                    <p className=\"p-0 m-0 leading-4 font-medium  text-gray-800\">\r\n                      {/* name */}\r\n                      {data?.message?.username}\r\n                    </p>\r\n                  </span>\r\n                  <span className=\"\">\r\n                    <p className=\"text-sm  text-gray-700\">email</p>\r\n                    <p className=\"p-0 m-0 leading-4 font-medium  text-gray-800\">\r\n                      {/* email */}\r\n                      {data?.message?.email}\r\n                    </p>\r\n                  </span>\r\n                </div>\r\n                <div className=\"border rounded-md p-4 flex flex-col gap-2 \">\r\n                  <p className=\"text-gray-500 border-b-2 font-medium w-fit\">\r\n                    Histroy\r\n                  </p>\r\n                  <span className=\"\">\r\n                    <p className=\"text-sm p-0 text-gray-700\">Last updated</p>\r\n                    <p className=\"p-0 m-0 leading-4 font-medium font-mono text-gray-800\">\r\n                      {moment(data?.message?.updatedAt).format(\r\n                        \"DD MMM YYYY h:mma\"\r\n                      )}\r\n                    </p>\r\n                  </span>\r\n                  <span className=\"\">\r\n                    <p className=\"text-sm p-0 text-gray-700\">joined</p>\r\n                    <p className=\"p-0 m-0 leading-4 font-medium font-mono text-gray-800\">\r\n                      {moment(data?.message?.createdAt).format(\r\n                        \"DD MMMM YYYYY h:mma\"\r\n                      )}\r\n                    </p>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["userApi","emptySplitApi","endpoints","builder","userInfo","query","email","concat","providesTags","updateUserInfo","mutation","info","url","method","body","invalidatesTags","uploadProfile","detail","useUserInfoQuery","useUpdateUserInfoMutation","useUploadProfileMutation","validationSchema","yup","required","username","_userData$avatar","_data$message","_data$message2","_data$message3","_data$message4","_data$message5","_useState","useState","_useState2","_slicedToArray","toggleEdit","setToggleEdit","auth","useAuthUser","dispatch","useDispatch","_useUserInfoQuery","refetchOnMountOrArgChange","isLoading","data","isSuccess","refetch","isFetching","isError","userInfoDetailError","error","console","log","_useUpdateUserInfoMut","_useUpdateUserInfoMut2","_useUpdateUserInfoMut3","updateUserProfileLoading","updateUserProfileSuccess","_useUploadProfileMuta","_useUploadProfileMuta2","_useUploadProfileMuta3","uploadProfileSuccess","isuploadProfileFetching","userData","message","formik","useFormik","initialValues","validateOnBlur","onSubmit","values","action","resetForm","useEffect","addUserImage","avatar","_jsxs","className","children","_jsx","Navbar","Loader","MyModal","isOpen","onClose","autoComplete","handleSubmit","type","name","value","onChange","handleChange","onBlur","handleBlur","touched","errors","disabled","CircularProgress","size","style","color","display","onClick","src","loadprofile","alt","htmlFor","BsPlusCircleFill","fontSize","id","e","read","FileReader","readAsDataURL","target","files","onloadend","image","result","moment","updatedAt","format","createdAt"],"sourceRoot":""}